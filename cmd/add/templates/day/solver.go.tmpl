package day{{printf "%02d" .Day}}

import (
	"fmt"
	"github.com/taskat/aoc/internal/years/{{.Year}}/days"
)

// day is the day of the solver
const day = {{printf "%d" .Day}}

// init registers the solver for day {{printf "%02d" .Day}}
func init() {
	days.AddDay(day, &Solver{})
}

// Solver implements the puzzle solver for day {{printf "%02d" .Day}}
type Solver struct{}

// AddHyperParams adds hyper parameters to the solver
func (s *Solver) AddHyperParams(params ...string) {}

// parse handle the common parsing logic for both parts
func (s *Solver) parse(lines []string) {}

// SolvePart1 solves part 1 of the puzzle
func (s *Solver) SolvePart1(lines []string) string {
	return ""
}

// SolvePart2 solves part 2 of the puzzle
func (s *Solver) SolvePart2(lines []string) string {
	return ""
}
